{"version":3,"sources":["components/chatapp/Compose.js","components/chatapp/TitleHeader.js","components/chatapp/MessageList.js","components/chatapp/UserList.js","components/chatapp/index.js","components/loginform/LoginForm.js","components/loginform/index.js","components/app/index.js","index.js"],"names":["Compose","props","sendMessage","message","state","handleSend","clearMessage","setState","handleKeyDown","e","key","length","style","margin","width","Input","fluid","value","this","placeholder","onChange","target","onKeyDown","React","Component","TitleHeader","hstyle","color","text","Header","as","inverted","block","textAlign","MessageList","scrollToBottom","messagesEnd","scrollIntoView","behavior","msgList","map","m","index","Segment","float","clear","ref","el","UserList","userList","u","Grid","Row","padding","overflow","ChatApp","chatStyle","border","height","overflowY","columns","Column","paddingRight","LoginForm","submitLogin","console","log","chatUrl","password","username","preventDefault","formFields","buttonProps","size","type","disabled","Form","Field","required","onSubmit","name","loginError","clearLoginError","Message","negative","Button","onClick","LoginContainer","handleLoginSubmit","modalProps","centered","open","connected","Modal","marginTop","Content","loginErrors","App","dateFormat","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","setupEventSource","clearFields","token","eventSource","EventSource","handleDisconnect","addEventListener","close","data","JSON","parse","user","dateParsed","created","indexOf","prevState","lastEventId","lastEvent","status","filter","users","convertToForm","formData","FormData","append","fetch","method","body","then","res","json","headers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3608e336.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Input } from 'semantic-ui-react';\n\nclass Compose extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    \tmessage: \"\"\n    }\n  }\n\n  sendMessage = () => {\n  \tconst { message } = this.state;\n\tthis.props.handleSend(message);\n  };\n\n  clearMessage = () => {\n  \tthis.setState({ message: \"\" });\n  }\n\n  handleKeyDown = (e) => {\n\tif (e.key === 'Enter' && this.state.message.length > 0) {\n      \tthis.sendMessage();\n\t\tthis.clearMessage();\n    }\n  };\t\n\n\n  render() {\n  \tconst divStyle = {\n  \t\tmargin: '0px 50px',\n  \t\twidth: '100vw'\n  \t}\n    return (\n      <div style={divStyle}>\n      \t<Input fluid\n      \t\tvalue={this.state.message}\n      \t\tplaceholder='Enter message...'\n      \t\tonChange={(e) => {\n            \tthis.setState({ message: e.target.value });\n          \t}}\n          \tonKeyDown={this.handleKeyDown}\n      \t/>\n      </div>\n    );\n  }\n  \n}\n\nexport default Compose;\n","import React from 'react';\n\nimport { Header } from 'semantic-ui-react';\n\nconst TitleHeader = ({ hstyle, color, text }) => {\n  return (\n    <div>\n      <Header style={{width: '100%'}} as={hstyle} inverted color={color} block textAlign='center'>\n        {text}\n      </Header>\n    </div>\n  );\n};\n\nexport default TitleHeader;\n","import React from 'react';\n\nimport { Grid, Segment } from 'semantic-ui-react';\n\n// class MessageList extends React.Component {\n//   // constructor(props) {\n//   //   super(props);\n//   // }\n\n//   render() {\n//   \tconst msgList = [];\n//   \tfor (let i=0; i<50; i++) {\n//   \t\tlet testStr = '';\n//   \t\tfor (let j=0; j<50; j++) {\n//   \t\t\ttestStr += 'testmsg ' + i;\n//   \t\t}\n//   \t\tmsgList.push(<p style={{width: 'break-word'}}>{testStr}</p>);\n//   \t}\n//     return (\n//       <div>\n//       {/*}\n//         <Grid container padded style={{marginTop: '1rem'}}>\n// \t      {msgList.map((m) => (\n// \t        <Grid.Row key={m} style={{ padding: '2px', margin: '5px 0px' }} textAlign='justified'>\n// \t        \t<p>{m}</p>\n// \t      \t</Grid.Row>\n// \t\t     ))}\n// \t    </Grid>*/}\n// \t    {msgList.map((m) => (\n// \t\t\t<Segment>{m}</Segment>\n// \t    ))}\n//       </div>\n//     );\n//   }\n// }\n\nclass MessageList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tscrollToBottom = () => {\n  \t\tthis.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n\t}\n\n\tcomponentDidMount() {\n\t  this.scrollToBottom();\n\t}\n\n\tcomponentDidUpdate() {\n\t  this.scrollToBottom();\n\t}\n\n\trender() {\n\t\treturn (\n\t      <div>\n\t\t    {this.props.msgList.map((m, index) => (\n\t\t\t\t<Segment key={index}>{m}</Segment>\n\t\t    ))}\n\t\t    <div style={{ float:\"left\", clear: \"both\" }}\n\t             ref={(el) => { this.messagesEnd = el; }}>\n\t        </div>\n\t      </div>\n\t    );\n\t}\t\n}\n\n// const MessageList = ({ msgList }) => {\n// \treturn (\n//       <div>\n// \t    {msgList.map((m, index) => (\n// \t\t\t<Segment key={index}>{m}</Segment>\n// \t    ))}\n// \t    <div style={{ float:\"left\", clear: \"both\" }}\n//              ref={(el) => { this.messagesEnd = el; }}>\n//         </div>\n//       </div>\n//     );\n// };\n\nexport default MessageList;\n","import React from 'react';\n\nimport { Header, Grid } from 'semantic-ui-react';\n\n// class UserList extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//     \tusers: []\n//     }\n//   }\n\n//   render() {\n//   \t/*const { users } = this.state;*/\n//   \tconst users = [];\n//     for (let i=0; i<50; i++) {\n//       users.push(<p style={{width: 'break-word'}}>{'jennifer' + i}</p>);\n//     }\n//     return (\n//       <div>\n//   \t      {users.map((u) => (\n//   \t        <Grid.Row key={u} style={{padding: '10px', overflow: 'hidden', textAlign: 'center'}}>\n//   \t        \t<p style={{width: 'break-word'}}>{u}</p>\n//   \t      \t</Grid.Row>\n//   \t\t     ))}\n//       </div>\n//     );\n//   }\n// }\n\nconst UserList = ({ userList }) => {\n  return (\n      <div>\n          {userList.map((u) => (\n            <Grid.Row key={u} style={{padding: '10px', overflow: 'hidden', textAlign: 'center'}}>\n              <p style={{width: 'break-word'}}>{u}</p>\n            </Grid.Row>\n           ))}\n      </div>\n    );\n};\n\nexport default UserList;\n","import React from 'react';\n\nimport { Grid, Image } from 'semantic-ui-react';\n\nimport Compose from './Compose';\nimport TitleHeader from './TitleHeader';\nimport MessageList from './MessageList';\nimport UserList from './UserList';\n\nclass ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const chatStyle = {\n      border: '1px solid black',\n      height: '80vh',\n      overflowY: 'scroll'\n    }\n    const msgListStyle = {\n      padding: '10px',\n      width: '80vw'\n    }\n    const userListStyle = {\n      paddingRight: '0'\n    }\n\n    return (\n      <div>\n        <TitleHeader hstyle='h2' color='violet' text='CS291 Chat App'/>\n        <Grid columns={2}>\n          <Grid.Row>\n            <Grid.Column width={2} style={{...chatStyle,...userListStyle}}>\n              <TitleHeader hstyle='h5' color='violet' text='Online Users'/>\n              <UserList userList={ this.props.userList } />\n            </Grid.Column>\n            <Grid.Column width={14} style={{...chatStyle,...msgListStyle}}>\n              <MessageList msgList={ this.props.msgList }  />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row width={16}>\n            <Compose handleSend={this.props.handleSend} />\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n  \n}\n\nexport default ChatApp;\n","import React from 'react';\nimport { Button, Form, Input, Message, Segment } from \"semantic-ui-react\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chatUrl: '',\n      password: '',\n      username: ''\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  submitLogin = (e) => {\n    console.log('submitting login');\n    const { chatUrl, password, username } = this.state;\n    e.preventDefault();\n    const formFields = {\n      chatUrl: chatUrl,\n      password: password,\n      username: username\n    }\n    this.props.submitLogin(formFields)\n  }\n\n  render() {\n    const { chatUrl, password, username} = this.state;\n    var buttonProps = {\n      color: 'blue',\n      size: 'small',\n      type: 'submit',\n      disabled: !username || !password || !chatUrl\n    };\n\n    //console.log('loginform errors', loginErrors);\n    return (\n      <div>\n        <Form>\n          <Form.Field required onSubmit={this.submitLogin}>\n            <label>Chat URL</label>\n            <Input\n              fluid\n              placeholder=\"Enter chat url...\"\n              name=\"chatUrl\"\n              type=\"text\"\n              value={chatUrl}\n              onChange={(e) => {\n                this.setState({ chatUrl: e.target.value });\n              }}\n              />\n          </Form.Field>\n          <Form.Field required onChange = {(e) => {\n            if (this.props.loginError !== 0) {\n              this.props.clearLoginError();\n            }\n          }}>\n            <label>Username</label>\n            <Input\n              fluid\n              placeholder=\"Enter Username...\"\n              name=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => {\n                this.setState({ username: e.target.value });\n              }}\n              />\n          </Form.Field>\n          <Form.Field required onChange = {(e) => {\n            if (this.props.loginError !== 0) {\n              this.props.clearLoginError();\n            }\n          }}>\n            <label>Password</label>\n            <Input\n              fluid\n              placeholder=\"Enter Password...\"\n              name=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => {\n                this.setState({ password: e.target.value });\n              }}\n              />\n              {this.props.loginError !== \"\" && <Message negative>{this.props.loginError}</Message>}\n          </Form.Field>\n          <Button {...buttonProps} onClick={this.submitLogin}>Login</Button>\n        </Form>\n      </div>\n    );\n  }\n  \n}\n\nexport default LoginForm;","import React from 'react';\n\nimport { Modal } from \"semantic-ui-react\";\nimport LoginForm from './LoginForm';\n\nclass LoginContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formFields: {}\n    };\n\n    this.submitLogin = (formFields) => {\n      console.log('LoginForm fields: ');\n      console.log(formFields);\n      this.props.handleLoginSubmit(formFields)\n    }\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    var modalProps = {\n      centered: true,\n      open: !this.props.connected,\n      size: \"small\"\n    }\n    return (\n      <div>\n        <Modal {...modalProps} style={{marginTop: '-20vh'}}>\n          <Modal.Content>\n            <LoginForm clearLoginError={this.props.clearLoginError} loginError={this.props.loginErrors} submitLogin={this.submitLogin}/> \n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n  \n}\n\nexport default LoginContainer;\n","import React from 'react';\n\nimport ChatApp from '../chatapp';\nimport LoginContainer from '../loginform';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.eventSource = null;\n\n    this.state = {\n      chatUrl: '',\n      connected: false,\n      token: '',\n      username: '',\n      msgList: [],\n      userList: [],\n      loginError: \"\",\n      lastEventId: \"\",\n      lastEvent: \"\"\n    };\n  };\n\n  dateFormat = (timestamp) => {\n    var date = new Date(timestamp * 1000);\n    return (\n        date.toLocaleDateString(\"en-US\") +\n        \" \" +\n        date.toLocaleTimeString(\"en-US\")\n    );\n  };\n\n  setupEventSource = (chatUrl, clearFields) => {\n      const { token } = this.state;\n\n      this.eventSource = new EventSource(chatUrl + '/stream/' + token);\n\n      this.setState({ chatUrl: chatUrl, connected: true });\n\n      this.handleDisconnect = () => {\n        this.setState({ chatUrl: \"\", token: \"\", connected: false, username: \"\", msgList: [], userList: [], loginError:\"\" });\n      };        \n\n      this.eventSource.addEventListener('Disconnect', e => {\n        console.log('Got Disconnect Event');\n        this.handleDisconnect();\n        this.eventSource.close();\n      });\n\n      this.eventSource.addEventListener('Join', e => {\n        console.log('Got Join Event');\n        const data = JSON.parse(e.data);\n        console.log(data.user + \" joined\");\n        const dateParsed = this.dateFormat(data.created);\n        if (this.state.userList.indexOf(data.user) === - 1) {\n          if (data.user !== this.state.username) {\n            this.setState(prevState => ({\n              userList: [...prevState.userList, data.user],\n            }));\n          }\n        }\n        this.setState(prevState => ({\n          msgList: [...prevState.msgList, `${dateParsed} JOIN: ${data.user}`]\n        }));\n        console.log(\"new msg list: \" + this.state.msgList);\n      });\n\n      this.eventSource.addEventListener('Message', e => {\n        console.log('Got Message Event');\n        const data = JSON.parse(e.data);\n        console.log(\"created: \", data.created);\n        const dateParsed = this.dateFormat(data.created);\n        this.setState(prevState => ({\n          msgList: [...prevState.msgList, `${dateParsed} (${data.user}) ${data.message}`],\n          lastEventId: e.lastEventId,\n          lastEvent: `${dateParsed} STATUS: ${data.status}`\n        }));\n        console.log(\"lastEventId: \", this.state.lastEventId);\n        console.log(\"lastEvent: \", this.state.lastEvent);\n        //console.log(this.state.msgList);\n      });\n\n      this.eventSource.addEventListener('Part', e => {\n        console.log('Got Part Event');\n        const data = JSON.parse(e.data);\n        const dateParsed = this.dateFormat(data.created);\n        this.setState(prevState => ({\n          userList: prevState.userList.filter(user => user !== data.user)\n        }));\n        console.log(\"new list: \" + this.state.userList);\n        this.setState(prevState => ({\n          msgList: [...prevState.msgList, `${dateParsed} PART: ${data.user}`]\n        }));\n      });\n\n      this.eventSource.addEventListener('ServerStatus', e => {\n        console.log('Got ServerStatus Event');\n        const data = JSON.parse(e.data);\n        const dateParsed = this.dateFormat(data.created);\n        this.setState(prevState => ({\n          msgList: [...prevState.msgList, `${dateParsed} STATUS: ${data.status}`],\n          lastEventId: e.lastEventId,\n          lastEvent: `${dateParsed} STATUS: ${data.status}`\n        }));\n        console.log(\"lastEventId: \", this.state.lastEventId);\n        console.log(\"lastEvent: \", this.state.lastEvent);\n        // console.log(e);\n      });\n\n      this.eventSource.addEventListener('Users', e => {\n        console.log('Got Users Event');\n        const data = JSON.parse(e.data);\n        console.log(data);\n        this.setState({ userList: data.users });\n      });\n\n      this.eventSource.addEventListener('error', e => {\n        console.log('Got error Event');\n        // console.log(e);\n      });\n    };\n\n  clearLoginError = () => {\n    this.setState({ loginError: \"\" });\n  };\n  \n  convertToForm = (formFields) => {\n    const formData = new FormData();\n\n    for(const name in formFields) {\n      formData.append(name, formFields[name]);\n    }\n\n    return formData;\n  };\n\n  handleLoginSubmit = (formFields) => {\n    console.log('app handle login fields: ');\n    console.log(formFields);\n    const { chatUrl, lastEventId, password, username } = formFields;\n    const data = {\n      username: username,\n      password: password\n    };\n\n    const formData  = this.convertToForm(data);\n    fetch(chatUrl + '/login', {\n      method: 'POST',\n      body: formData,\n    }).then(res => {\n      if (res.status === 403) {\n        this.setState({ loginError: \"The username and password do not match.\" });\n        console.log('login errors: ', this.state.loginErrors);\n      }\n      else if (res.status === 201) {\n        res.json().then(data => {\n          this.setState({token: data.token});\n          this.setState({username: username});\n          this.setupEventSource(chatUrl, this.clearFields);\n        });\n      }\n      else if (res.status == 422) {\n        /* Should not happen on client because cannot login if username or password field blank */\n         console.log(\"Form can only have username and password field and neither can be empty.\");\n      }\n    })\n  };\n\n  handleSend = (message) => {\n    const { chatUrl } = this.state;\n    const data = {\n      message: message\n    };\n\n    const formData  = this.convertToForm(data);\n\n    fetch(chatUrl + '/message', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + this.state.token,\n      },\n      body: formData,\n    }).then(res => {\n      if (res.status === 403) {\n        /* Should not happen on client because uses token that was valid from /login */\n        console.log(\"Signed token not valid.\");\n      }\n      else if (res.status === 422) {\n        /* Should not happen on client because cannot enter if message field blank */\n        console.log(\"Form can only have message field and message cannot be empty.\");\n      }\n    });\n  };\n\n  render() {\n    const { connected, loginError, msgList, userList } = this.state;\n    // console.log('parent connected: ' + connected);\n    console.log('userList: ' + userList);\n    return (\n      <div>\n        <ChatApp connected={connected} handleSend={this.handleSend} msgList={msgList} userList={userList}/>\n        <LoginContainer \n          connected={connected}\n          clearLoginError={this.clearLoginError}\n          handleLoginSubmit={this.handleLoginSubmit}\n          loginErrors={loginError}\n        />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}